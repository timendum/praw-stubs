from ...base import PRAWBase as PRAWBase
from ..generator import ListingGenerator as ListingGenerator
from _typeshed import Incomplete
from typing import Any, Dict, Iterator, Union

class BaseListingMixin(PRAWBase):
    VALID_TIME_FILTERS: Incomplete
    def controversial(self, *, time_filter: str = ..., **generator_kwargs: Union[str, int, Dict[str, str]]) -> Iterator[Any]: ...
    def hot(self, **generator_kwargs: Union[str, int, Dict[str, str]]) -> Iterator[Any]: ...
    def new(self, **generator_kwargs: Union[str, int, Dict[str, str]]) -> Iterator[Any]: ...
    def top(self, *, time_filter: str = ..., **generator_kwargs: Union[str, int, Dict[str, str]]) -> Iterator[Any]: ...
