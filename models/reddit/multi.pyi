import praw
from ...const import API_PATH as API_PATH
from ...util.cache import cachedproperty as cachedproperty
from ..listing.mixins import SubredditListingMixin as SubredditListingMixin
from .base import RedditBase as RedditBase
from .redditor import Redditor as Redditor
from .subreddit import Subreddit as Subreddit, SubredditStream as SubredditStream
from _typeshed import Incomplete
from typing import Any, Dict, List, Optional, Union

class Multireddit(SubredditListingMixin, RedditBase):
    STR_FIELD: str
    RE_INVALID: Incomplete
    @staticmethod
    def sluggify(title: str): ...
    def stream(self) -> SubredditStream: ...
    path: Incomplete
    subreddits: Incomplete
    def __init__(self, reddit: praw.Reddit, _data: Dict[str, Any]) -> None: ...
    def add(self, subreddit: praw.models.Subreddit): ...
    def copy(self, *, display_name: Optional[str] = ...) -> praw.models.Multireddit: ...
    def delete(self) -> None: ...
    def remove(self, subreddit: praw.models.Subreddit): ...
    def update(self, **updated_settings: Union[str, List[Union[str, 'praw.models.Subreddit', Dict[str, str]]]]): ...
