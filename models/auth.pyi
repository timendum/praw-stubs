from ..exceptions import InvalidImplicitAuth as InvalidImplicitAuth, MissingRequiredAttributeException as MissingRequiredAttributeException
from .base import PRAWBase as PRAWBase
from typing import Dict, List, Optional, Set, Union

class Auth(PRAWBase):
    @property
    def limits(self) -> Dict[str, Optional[Union[str, int]]]: ...
    def authorize(self, code: str) -> Optional[str]: ...
    def implicit(self, *, access_token: str, expires_in: int, scope: str) -> None: ...
    def scopes(self) -> Set[str]: ...
    def url(self, *, duration: str = ..., implicit: bool = ..., scopes: List[str], state: str) -> str: ...
